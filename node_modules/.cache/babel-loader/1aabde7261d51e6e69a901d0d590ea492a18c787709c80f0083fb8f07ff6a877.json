{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirti\\\\frontend\\\\src\\\\Pages\\\\UserDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const user = useSelector(state => state.users.list.find(user => user.id === parseInt(id)));\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"User not found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold\",\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone: \", user.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Website: \", user.website]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-bold mt-4\",\n      children: \"Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.address.street, \", \", user.address.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-bold mt-4\",\n      children: \"Company:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.company.catchPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDetailPage, \"ILGHxOP/RI0UNm7939sMMsW5ulY=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = UserDetailPage;\nexport default UserDetailPage;\nvar _c;\n$RefreshReg$(_c, \"UserDetailPage\");","map":{"version":3,"names":["React","useParams","useSelector","jsxDEV","_jsxDEV","UserDetailPage","_s","id","user","state","users","list","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","email","phone","website","address","street","city","company","catchPhrase","_c","$RefreshReg$"],"sources":["C:/Users/Kirti/frontend/src/Pages/UserDetailPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UserDetailPage = () => {\r\n  const { id } = useParams();\r\n  const user = useSelector((state) =>\r\n    state.users.list.find((user) => user.id === parseInt(id))\r\n  );\r\n\r\n  if (!user) return <p>User not found!</p>;\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold\">{user.name}</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>Phone: {user.phone}</p>\r\n      <p>Website: {user.website}</p>\r\n      <h3 className=\"text-xl font-bold mt-4\">Address:</h3>\r\n      <p>{user.address.street}, {user.address.city}</p>\r\n      <h3 className=\"text-xl font-bold mt-4\">Company:</h3>\r\n      <p>{user.company.name}</p>\r\n      <p>{user.company.catchPhrase}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetailPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,IAAI,GAAGN,WAAW,CAAEO,KAAK,IAC7BA,KAAK,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,CAAEJ,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKM,QAAQ,CAACN,EAAE,CAAC,CAC1D,CAAC;EAED,IAAI,CAACC,IAAI,EAAE,oBAAOJ,OAAA;IAAAU,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAExC,oBACEd,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBV,OAAA;MAAIe,SAAS,EAAC,oBAAoB;MAAAL,QAAA,EAAEN,IAAI,CAACY;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnDd,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACN,IAAI,CAACa,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACN,IAAI,CAACc,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,GAAG,WAAS,EAACN,IAAI,CAACe,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Bd,OAAA;MAAIe,SAAS,EAAC,wBAAwB;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDd,OAAA;MAAAU,QAAA,GAAIN,IAAI,CAACgB,OAAO,CAACC,MAAM,EAAC,IAAE,EAACjB,IAAI,CAACgB,OAAO,CAACE,IAAI;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDd,OAAA;MAAIe,SAAS,EAAC,wBAAwB;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDd,OAAA;MAAAU,QAAA,EAAIN,IAAI,CAACmB,OAAO,CAACP;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,EAAIN,IAAI,CAACmB,OAAO,CAACC;IAAW;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBID,cAAc;EAAA,QACHJ,SAAS,EACXC,WAAW;AAAA;AAAA2B,EAAA,GAFpBxB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}