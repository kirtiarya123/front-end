{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kirti\\\\frontend\\\\src\\\\Pages\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUsers } from '../Redux/userSlice';\nimport UserCard from '../Components/UserCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const dispatch = useDispatch();\n  const {\n    list: users,\n    loading,\n    error\n  } = useSelector(state => state.users);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name or email\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"border p-2 mb-4 w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"kvL7mnKdVvckelcwGvFlhkFQsb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","fetchUsers","UserCard","jsxDEV","_jsxDEV","UserList","_s","searchTerm","setSearchTerm","dispatch","list","users","loading","error","state","filteredUsers","filter","user","name","toLowerCase","includes","email","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Kirti/frontend/src/Pages/UserList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchUsers } from '../Redux/userSlice';\r\nimport UserCard from '../Components/UserCard';\r\n\r\nconst UserList = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { list: users, loading, error } = useSelector((state) => state.users);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const filteredUsers = users.filter(\r\n    (user) =>\r\n      user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by name or email\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className=\"border p-2 mb-4 w-full\"\r\n      />\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : error ? (\r\n        <p>Error: {error}</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {filteredUsers.map((user) => (\r\n            <UserCard key={user.id} user={user} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,IAAI,EAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACH,KAAK,CAAC;EAE3Ed,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAEd,MAAMM,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAC/BC,IAAI,IACHA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,UAAU,CAACY,WAAW,CAAC,CAAC,CAAC,IAC1DF,IAAI,CAACI,KAAK,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,UAAU,CAACY,WAAW,CAAC,CAAC,CAC9D,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,yBAAyB;MACrCC,KAAK,EAAEnB,UAAW;MAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CJ,SAAS,EAAC;IAAwB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACDrB,OAAO,gBACNR,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACfpB,KAAK,gBACPT,OAAA;MAAAmB,QAAA,GAAG,SAAO,EAACV,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAErB7B,OAAA;MAAKkB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EACnDR,aAAa,CAACmB,GAAG,CAAEjB,IAAI,iBACtBb,OAAA,CAACF,QAAQ;QAAee,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACkB,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArCID,QAAQ;EAAA,QAEKL,WAAW,EACYD,WAAW;AAAA;AAAAqC,EAAA,GAH/C/B,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}